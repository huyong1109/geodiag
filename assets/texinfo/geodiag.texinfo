\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename geodiag.info
@settitle GEODIAG Manual version 1.0.0-rc1
@c %**end of header

@copying
This manual is for GEODIAG, version 1.0.0-rc1.

Copyright @copyright{} 2012, 2013, 2014 Li Dong.
@end copying

@titlepage
@title GEODIAG
@subtitle Geoscientifc Diagnostics Open Platform version 1.0.0-rc1
@author Li Dong

@c  The following two commands
@c  start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c So the toc is printed at the start.
@contents

@chapter Introduction

GEODIAG utilizes @uref{http://www.ncl.ucar.edu, NCL} as the base for constructing a diagnostics platform.

@chapter Basic usage

@section Installation

GEODIAG is version controlled by using @code{git} and hosted at @code{GitHub}.
It is recommendated to obtain GEODIAG through @code{git} as
@example
git clone https://github.com/lasg-model/geodiag
@end example
@noindent
In this way, the local copy can be updated easily by
@example
geodiag update
@end example
@noindent
After downloading GEODIAG to @code{<geodiag-root>}, modify the configuration
of BASH (e.g. @code{.bashrc}) as
@example
source <geodiag-root>/setup.sh
@end example
@noindent
Then login again, you should be able to invoke the command
@code{geodiag}.

@section Library usage

@example
load "$GEODIAG_ROOT/geodiag.ncl"
@end example

@subsection China Map

The Chinese border has long been subject to the harassment of some other
countries, even in scientific field (see @ref{fig:china_border}). So GEODIAG
provides an utility to plot correct border. This utility tries to minimize its
trace. Two functions are mandatory (@code{setup_china_map} and
@code{attach_china_map}), which clip the user plotting codes.

@example
res = True
res@@isShowProvince = False
res@@isShowSouthChinaSea = True
res@@isAddMask = True
res@@isShowRivers = True
res@@riverColor = "black"
res@@riverThickness = 0.5
res@@boundaryColor = "black"
res@@boundaryThickness = 0.5
setup_china_map(res)
... ; user plotting resources
plot = ... ; plot the figure
attach_china_map(wks, plot)
draw(plot) ; DO NOT FORGET THIS STEP
@end example

@float Figure,fig:china_border
@center @image{china_border,300pt,,,.png}
@caption{The Chinese border in NCL is wrong as shown in red line. The black
one is correct.}
@end float

Due to the high fineness of the border in the shapefile, the plotting speed
will be slowed down a bit.

@subsection EEMD

@section Package usage
@anchor{Package usage}

The diagnostics platform is composed of several packages. Each package is
specialized for one phenomenon or metrics. GEODIAG provides a uniform way to
run these packages by
@example
geodiag run <package-name> <config-file>
@end example
@noindent
@code{<package-name>} is the name of the package, e.g. @code{mjo}.
@code{<config-file>} is the configuration file for the package which could be
generated by running
@example
geodiag config <package-name> [-i]
@end example
@noindent
Option @code{-i} means the command is interactive. Users just need to fill
the @code{<config-file>}. Intermedia data and figures will be generated.

This design makes GEODIAG suitable to post-process model results in batch
mode.

@chapter Developing diagnostics package

GEODIAG is designed as an open platform. A @strong{framework} for writing
diagnostics package is specified. When a package is written following the
standard of this framework, it can be directly plugged into GEODIAG and readily
used by other users. This standard does @emph{not} try to put handcuffs on
researchers, but to eliminate the unnecessary duplication of labors.

@strong{BASH} script is chosen as the developing language, because almost all
the servers provide a uniform BASH shell environment. Ruby and Python are
more suitable for constructing the framework, but some servers does not provide
them@footnote{You will not want to deal with numerous software dependencies to
install Ruby or Python with necessary version.} and most researchers are not
familiar with them.  @code{<package-name>} repesents the package name (e.g.
@code{mjo}) as previous.

The package is driven through @code{geodiag} command as shown in @ref{Package
usage}. Package developers should provide a @code{driver.sh} BASH script,
which contains @code{<package-name>_help}, @code{<package-name>_config} and
@code{<package-name>_run} functions so that the package can be treated as a
black box. GEODIAG will look for the available packages within the
@code{packages} directory, and check the validity of the packages.

@float Table,tbl:driver_functions
@multitable @columnfractions .3 .7
@headitem   Base function                @tab Description
@item       @code{<package-name>_help}   @tab Print help of the package, especially the options.
@item       @code{<package-name>_config} @tab Generate a configuration file.
@item       @code{<package-name>_run}    @tab Run the package.
@end multitable
@caption{Driver mandatory functions and their meanings.}
@end float

@section Example: MJO package

To present the development of a package, a MJO package is developed as an example.

@bye
